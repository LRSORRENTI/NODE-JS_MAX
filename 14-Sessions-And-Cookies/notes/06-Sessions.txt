========
SESSIONS
========

To impelement a session we'll need another package, 
express-session 

So inside of the directory run: 

npm install --save express-session 

We want to initialize the session early on, 
when we spool up the server we want to initilize 
the session middleware, that way the session can be 
used for every incoming request 


Then inside of app.js: 

const path = require('path');

const express = require('express');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');
const session = require('express-session')

// Below is where we'll register our session, inside 
// we pass in a JS object where we configure the 
// session setup, we first set up a secret key, which 
// in production should be a long string of chars and 
// nums but for learning purposes we'll keep it simple

// Also set the resave key to false, meaning the session 
// won't save on every request / response, it will only 
// save if something changed in the session

// also pass in the saveUnitialized set to false, 
// which ensures no session gets saved for a req 
// where it doesn't need to be
app.use(session({secret: 'my secret',
                resave: false,
                saveUninitialized: false
              }))

